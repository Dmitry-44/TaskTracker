stages:
  - lint and check
  - build
  - deploy
  - notification

lint and check:
  stage: lint and check
  only:
    refs:
      - master
      - develop
  image:
    name: node:16.14
    entrypoint: [""]
  script:
    - npm i
    - npm run lint
    - npm run type-check

build master:
  stage: build
  only:
    refs:
      - master
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --snapshotMode=redo --context=$CI_PROJECT_DIR --build-arg sentry_auth_token=$SENTRY_AUTH_TOKEN --build-arg CONTEXT=$CI_PROJECT_DIR --build-arg REF=$CI_BUILD_REF --build-arg ERRORREPORTING=E_ALL --snapshotMode=redo --dockerfile=$CI_PROJECT_DIR/Dockerfile --destination=$CI_REGISTRY_IMAGE:latest  --destination=$CI_REGISTRY_IMAGE:prod-$CI_COMMIT_SHORT_SHA

deploy to production:
  only:
    refs:
      - master
  image: gcr.io/cloud-builders/kubectl:latest
  stage: deploy
  script:
    - kubectl config set-cluster k8s --server="$KUBE_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --token="$KUBE_TOKEN"
    - kubectl config set-context default --cluster=k8s --user=admin
    - kubectl config use-context default
    - sed -i "s/__VERSION__/prod-$CI_COMMIT_SHORT_SHA/" k8s.yaml
    - kubectl apply -f k8s.yaml
    - sleep 30s
    - kubectl rollout status -w deployment/photobank-interface -n default

notification to master:
    stage: notification
    only:
      refs:
        - master
    image:
      name: node:16.14
    script:
      - "node sendNewVersion.js https://api-post.ttrace.ru"

build develop:
  stage: build
  only:
    refs:
      - develop
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context=$CI_PROJECT_DIR --build-arg sentry_auth_token=$SENTRY_AUTH_TOKEN --build-arg CONTEXT=$CI_PROJECT_DIR --build-arg REF=$CI_BUILD_REF --build-arg ERRORREPORTING=E_ALL --snapshotMode=redo --dockerfile=$CI_PROJECT_DIR/Dockerfile  --destination=$CI_REGISTRY_IMAGE/dev-$CI_COMMIT_SHORT_SHA

deploy to develop:
  only:
    refs:
      - develop
  image: gcr.io/cloud-builders/kubectl:latest
  stage: deploy
  script:
    - kubectl config set-cluster k8s --server="$KUBE_URL_DEV_FAN" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --token="$KUBE_TOKEN_DEV_FAN"
    - kubectl config set-context default --cluster=k8s --user=admin
    - kubectl config use-context default
    - sed -i "s/__VERSION__/dev-$CI_COMMIT_SHORT_SHA/" dev-k8s.yaml
    - kubectl apply -f dev-k8s.yaml
    - sleep 30s
    - kubectl rollout status -w deployment/photobank-interface -n default


notification to dev:
    stage: notification
    only:
      refs:
        - develop
    image:
      name: gcr.io/cloud-builders/kubectl:latest
    script:
      - kubectl config set-cluster k8s --server="$KUBE_URL_DEV_FAN" --insecure-skip-tls-verify=true
      - kubectl config set-credentials admin --token="$KUBE_TOKEN_DEV_FAN"
      - kubectl config set-context default --cluster=k8s --user=admin
      - kubectl config use-context default
      - "kubectl exec -i $(kubectl get po -n default| grep admin-backend-front| awk '{print $1}') -- bash -c 'node sendNewVersion.js http://admin-backend-api:3000'"

